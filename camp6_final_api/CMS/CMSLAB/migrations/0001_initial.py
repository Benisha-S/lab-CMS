# Generated by Django 5.0.7 on 2024-07-11 16:23

import CMSLAB.managers
import CMSLAB.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField(null=True)),
                ('time_slot', models.CharField(choices=[('09:00-09:30', '09:00-09:30 AM'), ('09:30-10:00', '09:30-10:00 AM'), ('10:00-10:30', '10:00-10:30 AM')], max_length=11, null=True)),
                ('token', models.CharField(default=CMSLAB.models.generate_token, editable=False, max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('count', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Doctors',
            fields=[
                ('doc_id', models.AutoField(primary_key=True, serialize=False)),
                ('fees', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=200, unique=True)),
                ('low_value', models.IntegerField(blank=True, null=True)),
                ('high_value', models.IntegerField(blank=True, null=True)),
                ('unit', models.CharField(max_length=50)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='patient_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opid', models.CharField(default=CMSLAB.models.generate_opid, editable=False, max_length=10, unique=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('dob', models.DateField(blank=True, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(max_length=250)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_history', models.CharField(max_length=30, null=True)),
                ('symptoms', models.CharField(max_length=100, null=True)),
                ('diagnosis', models.CharField(max_length=100, null=True)),
                ('doctor_note', models.CharField(max_length=100, null=True)),
                ('next_visit', models.DateField(blank=True, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMSLAB.bookappointment')),
            ],
        ),
        migrations.AddField(
            model_name='bookappointment',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to='CMSLAB.doctors'),
        ),
        migrations.AddField(
            model_name='bookappointment',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='CMSLAB.patient_details'),
        ),
        migrations.AddField(
            model_name='doctors',
            name='specialization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specializations', to='CMSLAB.specialization'),
        ),
        migrations.AddField(
            model_name='bookappointment',
            name='specialization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booked_appointments', to='CMSLAB.specialization'),
        ),
        migrations.CreateModel(
            name='TestPrescribed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_prescribition', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('lab_tests', models.ManyToManyField(to='CMSLAB.newtest')),
                ('labtests', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMSLAB.diagnosis')),
            ],
        ),
        migrations.CreateModel(
            name='LiveTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tested_value', models.IntegerField()),
                ('comments', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('prescribed_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='CMSLAB.testprescribed')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('emp_id', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30, null=True)),
                ('address', models.CharField(max_length=250)),
                ('dob', models.DateField()),
                ('contact_number', models.CharField(blank=True, default=0, max_length=10)),
                ('date_of_joining', models.DateField(null=True)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genders', to='CMSLAB.gender')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group')),
                ('qualification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualifications', to='CMSLAB.qualification')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMSLAB.roles')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', CMSLAB.managers.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='doctors',
            name='user_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL),
        ),
    ]
